run_mode: debug                 # 开发模式, debug, release, test
addr: :9999                     # HTTP绑定端口
name: go-api                     # API Server的名字
url: http://127.0.0.1:9999      # pingServer函数请求的API服务器的ip:port
max_ping_count: 20              # pingServer函数try的次数
jwt_secret: Rtg9BPKNE62mB4mgvK9NGPZvQSaJWNxijxR42qRgq0iBv5
jwt_duration: 2                 # token 有效时长，单位小时
tls:
  addr: :8081
  cert: config/conf/server.crt
  key: config/conf/server.key
craypt:
  "md5": "IgkibX71IEf382PT"
  "aes": "IgkibX71IEf382PT"
  "rsa": "rsa/public.pem"
log:
  writers: file,stdout            # 有2个可选项：file,stdout, 可以两者同时选择输出位置，有2个可选项：file,stdout。选择file会将日志记录到logger_file指定的日志文件中，选择stdout会将日志输出到标准输出，当然也可以两者同时选择
  logger_level: DEBUG             # 日志级别，DEBUG, INFO, WARN, ERROR, FATAL
  logger_file: "./logs/go-api-access.log"   # 日志文件
  logger_warn_file: logs/go-api-warn.log
  logger_error_file: logs/go-api-errors.log
  log_format_text: true           # 日志的输出格式，json或者plaintext，true会输出成plaintext格式，false会输出成json格式
  log_rolling_policy: daily,      # rotate依据，可选的有：daily, hourly。如果选daily(默认)则根据天进行转存，如果是hourly则根据小时进行转存
  log_rotate_date: 1              # rotate转存时间，配合rollingPolicy: daily使用
  log_rotate_size: 1              # rotate转存大小，配合rollingPolicy: size使用
  log_backup_count: 7             # 当日志文件达到转存标准时，log系统会将该日志文件进行压缩备份，这里指定了备份文件的最大个数。
gorm:
  show_log: true                  # 是否打印SQL日志
  max_idle_conn: 10               # 最大打开的连接数
  max_open_conn: 60               # 最大的闲置的连接数
  conn_max_life_time: 60          # 连接重用的最大时间，单位分钟
db:
  type: "mysql"
  hostname: 127.0.0.1
  database: go-api
  username:  root
  password:  root
  hostport: 3306            # 如果是docker,可以替换为 对应的数据库容器服务名称，eg: db:3306
  dsn: ""
  charset: ""
  prefix: ""
  debug: 0
docker_db:
  name: go-api
  addr: 127.0.0.1:3306
  username: root
  password: root
cache:
  driver: "memory"                 # 缓存驱动，可以选file、memory、redis, 默认redis
  prefix: "go-api:"                # cache key前缀，一般为项目名称即可
redis:
  addr: "localhost:6379"
  password: "" # no password set
  db: 0 # use default DB
  dial_timeout: 60   # 单位：秒
  read_timeout: 2   # 单位：秒
  write_timeout: 2  # 单位：秒
  pool_size: 60
email:
  host: SMTP_HOST       # SMTP地址
  port: PORT            # 端口
  username: USER        # 用户名
  password: PASSWORD    # 密码
  name: name           # 发送者名称
  address: SEND_EMAIL   # 发送者邮箱
  reply_to: EMAIL       # 回复地址
  keepalive: 30         # 连接保持时长
qiniu:
  access_key: ACCESS_KEY
  secret_key: SECRET_KEY
  signature_id: signature_id  # 短信签名id
  template_id: template_id    # 模板id